@forward "@komplett/themed";

@use "@komplett/themed";
@use "./themes.scss";

@use "sass:meta";
@use "sass:color";

// Usually, you would just @use the library like
// @use "@komplett/themed" as *;
// However, we defined this as a global in the vite.config.ts, so no need to import it.
// all @komplett/themed functions will be globally available.

// meta.module-variables gets all themes we defined in ./themes.scss as a map.
// You could also just define the themes inside this file as a map!
// Then, you also don't have to import the `sass:meta` module.
$raw-theme-map: meta.module-variables("themes");

// modify-themes is used to apply any number of modifiers onto the themes.
$theme-map: themed.modify-themes($raw-theme-map, themed.alpha());

// Calling `themes` defines the theme-map.
// Everything after the `using` keyword is used to dynamically generate more CSS variables.
// In this example, we generate each variable of the dark theme with a lighter value.
// NOTE: Because these CSS variables are not included in the theme map, they can also not be type-checked.
@include themed.themes($theme-map, "my-var") using
  ($prefix, $key, $value, $theme) {
  @if $theme == "dark" and meta.type-of($value) == "color" {
    @include themed.make-css-variable(
      $prefix,
      "#{$key}--light",
      color.change($value, $lightness: 30%)
    );
  }
}
